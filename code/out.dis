
out.elf:     file format elf32-tradlittlemips


Disassembly of section .config_BFC02FF0:

bfc02ff0 <__config_BFC02FF0>:
bfc02ff0:	ff ff fe fa                                         ....

Disassembly of section .config_BFC02FF4:

bfc02ff4 <__config_BFC02FF4>:
bfc02ff4:	d9 79 f8 ff                                         .y..

Disassembly of section .config_BFC02FF8:

bfc02ff8 <__config_BFC02FF8>:
bfc02ff8:	db ce 6c ff                                         ..l.

Disassembly of section .config_BFC02FFC:

bfc02ffc <__config_BFC02FFC>:
bfc02ffc:	ff ff ff 7e                                         ...~

Disassembly of section .reset:

bd001970 <_reset>:
bd001970:	0f40065e 	jal	bd001978 <_startup>
bd001974:	00000000 	nop

bd001978 <_startup>:
bd001978:	401a6000 	mfc0	k0,c0_status
bd00197c:	7f5a04c0 	ext	k0,k0,0x13,0x1
bd001980:	13400005 	beqz	k0,bd001998 <_no_nmi>
bd001984:	00000000 	nop
bd001988:	3c1a9d00 	lui	k0,0x9d00
bd00198c:	275a297c 	addiu	k0,k0,10620
bd001990:	03400008 	jr	k0
bd001994:	00000000 	nop

bd001998 <_no_nmi>:
bd001998:	3c1da002 	lui	sp,0xa002
bd00199c:	27bdfff8 	addiu	sp,sp,-8
bd0019a0:	3c1ca000 	lui	gp,0xa000
bd0019a4:	279c7ff0 	addiu	gp,gp,32752
bd0019a8:	40096002 	mfc0	t1,c0_srsctl
bd0019ac:	01205820 	add	t3,t1,zero
bd0019b0:	7d2a1e80 	ext	t2,t1,0x1a,0x4
bd0019b4:	7d494984 	ins	t1,t2,0x6,0x4
bd0019b8:	40896002 	mtc0	t1,c0_srsctl
bd0019bc:	000000c0 	ehb
bd0019c0:	41dce000 	wrpgpr	gp,gp
bd0019c4:	408b6002 	mtc0	t3,c0_srsctl
bd0019c8:	000000c0 	ehb
bd0019cc:	3c089d00 	lui	t0,0x9d00
bd0019d0:	250829a4 	addiu	t0,t0,10660
bd0019d4:	0100f809 	jalr	t0
bd0019d8:	00000000 	nop

bd0019dc <_start_bss_init>:
bd0019dc:	3c08a000 	lui	t0,0xa000
bd0019e0:	25080000 	addiu	t0,t0,0
bd0019e4:	3c09a000 	lui	t1,0xa000
bd0019e8:	25290000 	addiu	t1,t1,0
bd0019ec:	10000006 	b	bd001a08 <_bss_check>
bd0019f0:	00000000 	nop

bd0019f4 <_bss_init>:
bd0019f4:	ad000000 	sw	zero,0(t0)
bd0019f8:	ad000004 	sw	zero,4(t0)
bd0019fc:	ad000008 	sw	zero,8(t0)
bd001a00:	ad00000c 	sw	zero,12(t0)
bd001a04:	25080010 	addiu	t0,t0,16

bd001a08 <_bss_check>:
bd001a08:	0109082b 	sltu	at,t0,t1
bd001a0c:	1420fff9 	bnez	at,bd0019f4 <_bss_init>
bd001a10:	00000000 	nop

bd001a14 <_dinit_init>:
bd001a14:	3c089d00 	lui	t0,0x9d00
bd001a18:	25082994 	addiu	t0,t0,10644
bd001a1c:	8d090000 	lw	t1,0(t0)
bd001a20:	11200018 	beqz	t1,bd001a84 <_dinit_end+0x18>
bd001a24:	25080004 	addiu	t0,t0,4
bd001a28:	8d0a0000 	lw	t2,0(t0)
bd001a2c:	25080004 	addiu	t0,t0,4
bd001a30:	8d0b0000 	lw	t3,0(t0)
bd001a34:	11600009 	beqz	t3,bd001a5c <_dinit_clear>
bd001a38:	25080004 	addiu	t0,t0,4

bd001a3c <_dinit_copy>:
bd001a3c:	910c0000 	lbu	t4,0(t0)
bd001a40:	254affff 	addiu	t2,t2,-1
bd001a44:	25080001 	addiu	t0,t0,1
bd001a48:	a12c0000 	sb	t4,0(t1)
bd001a4c:	1540fffb 	bnez	t2,bd001a3c <_dinit_copy>
bd001a50:	25290001 	addiu	t1,t1,1
bd001a54:	10000005 	b	bd001a6c <_dinit_end>
bd001a58:	00000000 	nop

bd001a5c <_dinit_clear>:
bd001a5c:	a1200000 	sb	zero,0(t1)
bd001a60:	254affff 	addiu	t2,t2,-1
bd001a64:	1540fffd 	bnez	t2,bd001a5c <_dinit_clear>
bd001a68:	25290001 	addiu	t1,t1,1

bd001a6c <_dinit_end>:
bd001a6c:	25080003 	addiu	t0,t0,3
bd001a70:	240afffc 	li	t2,-4
bd001a74:	01484024 	and	t0,t2,t0
bd001a78:	8d090000 	lw	t1,0(t0)
bd001a7c:	1520ffe7 	bnez	t1,bd001a1c <_dinit_init+0x8>
bd001a80:	00000000 	nop
bd001a84:	3c090000 	lui	t1,0x0
bd001a88:	25290000 	addiu	t1,t1,0
bd001a8c:	11200010 	beqz	t1,bd001ad0 <_ramfunc_done>
bd001a90:	00000000 	nop
bd001a94:	3c090002 	lui	t1,0x2
bd001a98:	25290000 	addiu	t1,t1,0
bd001a9c:	3c0abf88 	lui	t2,0xbf88
bd001aa0:	254a2010 	addiu	t2,t2,8208
bd001aa4:	ad490000 	sw	t1,0(t2)
bd001aa8:	3c090002 	lui	t1,0x2
bd001aac:	25290000 	addiu	t1,t1,0
bd001ab0:	3c0abf88 	lui	t2,0xbf88
bd001ab4:	254a2020 	addiu	t2,t2,8224
bd001ab8:	ad490000 	sw	t1,0(t2)
bd001abc:	3c090002 	lui	t1,0x2
bd001ac0:	25290000 	addiu	t1,t1,0
bd001ac4:	3c0abf88 	lui	t2,0xbf88
bd001ac8:	254a2030 	addiu	t2,t2,8240
bd001acc:	ad490000 	sw	t1,0(t2)

bd001ad0 <_ramfunc_done>:
bd001ad0:	40804800 	mtc0	zero,c0_count
bd001ad4:	240affff 	li	t2,-1
bd001ad8:	408a5800 	mtc0	t2,c0_compare
bd001adc:	3c080040 	lui	t0,0x40
bd001ae0:	400a6000 	mfc0	t2,c0_status
bd001ae4:	010a5025 	or	t2,t0,t2
bd001ae8:	408a6000 	mtc0	t2,c0_status
bd001aec:	3c099d00 	lui	t1,0x9d00
bd001af0:	25290000 	addiu	t1,t1,0
bd001af4:	000000c0 	ehb
bd001af8:	40897801 	mtc0	t1,c0_ebase
bd001afc:	3c090000 	lui	t1,0x0
bd001b00:	25290001 	addiu	t1,t1,1
bd001b04:	240a0000 	li	t2,0
bd001b08:	7d2a4944 	ins	t2,t1,0x5,0x5
bd001b0c:	408a6001 	mtc0	t2,c0_intctl
bd001b10:	3c090080 	lui	t1,0x80
bd001b14:	40896800 	mtc0	t1,c0_cause
bd001b18:	40088000 	mfc0	t0,c0_config
bd001b1c:	7d090580 	ext	t1,t0,0x16,0x1
bd001b20:	00094c40 	sll	t1,t1,0x11
bd001b24:	40086000 	mfc0	t0,c0_status
bd001b28:	3c010058 	lui	at,0x58
bd001b2c:	01014024 	and	t0,t0,at
bd001b30:	01284025 	or	t0,t1,t0
bd001b34:	40886000 	mtc0	t0,c0_status
bd001b38:	000000c0 	ehb
bd001b3c:	3c089d00 	lui	t0,0x9d00
bd001b40:	250829ac 	addiu	t0,t0,10668
bd001b44:	0100f809 	jalr	t0
bd001b48:	00000000 	nop
bd001b4c:	40086000 	mfc0	t0,c0_status
bd001b50:	3c01ffbf 	lui	at,0xffbf
bd001b54:	3421ffff 	ori	at,at,0xffff
bd001b58:	01014024 	and	t0,t0,at
bd001b5c:	40886000 	mtc0	t0,c0_status
bd001b60:	30840000 	andi	a0,a0,0x0
bd001b64:	30a50000 	andi	a1,a1,0x0
bd001b68:	3c089d00 	lui	t0,0x9d00
bd001b6c:	2508280c 	addiu	t0,t0,10252
bd001b70:	01000008 	jr	t0
bd001b74:	00000000 	nop

Disassembly of section .bev_excpt:

bd001cf0 <_bev_exception>:
bd001cf0:	3c1a9d00 	lui	k0,0x9d00
bd001cf4:	275a2860 	addiu	k0,k0,10336
bd001cf8:	03400008 	jr	k0
bd001cfc:	00000000 	nop

Disassembly of section .app_excpt:

9d000180 <_gen_exception>:
9d000180:	3c1a9d00 	lui	k0,0x9d00
9d000184:	275a26a4 	addiu	k0,k0,9892
9d000188:	03400008 	jr	k0
9d00018c:	00000000 	nop

Disassembly of section .vector_0:

9d000200 <__vector_dispatch_0>:
9d000200:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000204:	00000000 	nop

Disassembly of section .vector_1:

9d000220 <__vector_dispatch_1>:
9d000220:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000224:	00000000 	nop

Disassembly of section .vector_2:

9d000240 <__vector_dispatch_2>:
9d000240:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000244:	00000000 	nop

Disassembly of section .vector_3:

9d000260 <__vector_dispatch_3>:
9d000260:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000264:	00000000 	nop

Disassembly of section .vector_4:

9d000280 <__vector_dispatch_4>:
9d000280:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000284:	00000000 	nop

Disassembly of section .vector_5:

9d0002a0 <__vector_dispatch_5>:
9d0002a0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0002a4:	00000000 	nop

Disassembly of section .vector_6:

9d0002c0 <__vector_dispatch_6>:
9d0002c0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0002c4:	00000000 	nop

Disassembly of section .vector_7:

9d0002e0 <__vector_dispatch_7>:
9d0002e0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0002e4:	00000000 	nop

Disassembly of section .vector_8:

9d000300 <__vector_dispatch_8>:
9d000300:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000304:	00000000 	nop

Disassembly of section .vector_9:

9d000320 <__vector_dispatch_9>:
9d000320:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000324:	00000000 	nop

Disassembly of section .vector_10:

9d000340 <__vector_dispatch_10>:
9d000340:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000344:	00000000 	nop

Disassembly of section .vector_11:

9d000360 <__vector_dispatch_11>:
9d000360:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000364:	00000000 	nop

Disassembly of section .vector_12:

9d000380 <__vector_dispatch_12>:
9d000380:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000384:	00000000 	nop

Disassembly of section .vector_13:

9d0003a0 <__vector_dispatch_13>:
9d0003a0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0003a4:	00000000 	nop

Disassembly of section .vector_14:

9d0003c0 <__vector_dispatch_14>:
9d0003c0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0003c4:	00000000 	nop

Disassembly of section .vector_15:

9d0003e0 <__vector_dispatch_15>:
9d0003e0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0003e4:	00000000 	nop

Disassembly of section .vector_16:

9d000400 <__vector_dispatch_16>:
9d000400:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000404:	00000000 	nop

Disassembly of section .vector_17:

9d000420 <__vector_dispatch_17>:
9d000420:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000424:	00000000 	nop

Disassembly of section .vector_18:

9d000440 <__vector_dispatch_18>:
9d000440:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000444:	00000000 	nop

Disassembly of section .vector_19:

9d000460 <__vector_dispatch_19>:
9d000460:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000464:	00000000 	nop

Disassembly of section .vector_20:

9d000480 <__vector_dispatch_20>:
9d000480:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000484:	00000000 	nop

Disassembly of section .vector_21:

9d0004a0 <__vector_dispatch_21>:
9d0004a0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0004a4:	00000000 	nop

Disassembly of section .vector_22:

9d0004c0 <__vector_dispatch_22>:
9d0004c0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0004c4:	00000000 	nop

Disassembly of section .vector_23:

9d0004e0 <__vector_dispatch_23>:
9d0004e0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0004e4:	00000000 	nop

Disassembly of section .vector_24:

9d000500 <__vector_dispatch_24>:
9d000500:	0b4007c2 	j	9d001f08 <IntUart1Handler>
9d000504:	00000000 	nop

Disassembly of section .vector_25:

9d000520 <__vector_dispatch_25>:
9d000520:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000524:	00000000 	nop

Disassembly of section .vector_26:

9d000540 <__vector_dispatch_26>:
9d000540:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000544:	00000000 	nop

Disassembly of section .vector_27:

9d000560 <__vector_dispatch_27>:
9d000560:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000564:	00000000 	nop

Disassembly of section .vector_28:

9d000580 <__vector_dispatch_28>:
9d000580:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000584:	00000000 	nop

Disassembly of section .vector_29:

9d0005a0 <__vector_dispatch_29>:
9d0005a0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0005a4:	00000000 	nop

Disassembly of section .vector_30:

9d0005c0 <__vector_dispatch_30>:
9d0005c0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0005c4:	00000000 	nop

Disassembly of section .vector_31:

9d0005e0 <__vector_dispatch_31>:
9d0005e0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0005e4:	00000000 	nop

Disassembly of section .vector_32:

9d000600 <__vector_dispatch_32>:
9d000600:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000604:	00000000 	nop

Disassembly of section .vector_33:

9d000620 <__vector_dispatch_33>:
9d000620:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000624:	00000000 	nop

Disassembly of section .vector_34:

9d000640 <__vector_dispatch_34>:
9d000640:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000644:	00000000 	nop

Disassembly of section .vector_35:

9d000660 <__vector_dispatch_35>:
9d000660:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000664:	00000000 	nop

Disassembly of section .vector_36:

9d000680 <__vector_dispatch_36>:
9d000680:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000684:	00000000 	nop

Disassembly of section .vector_37:

9d0006a0 <__vector_dispatch_37>:
9d0006a0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0006a4:	00000000 	nop

Disassembly of section .vector_38:

9d0006c0 <__vector_dispatch_38>:
9d0006c0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0006c4:	00000000 	nop

Disassembly of section .vector_39:

9d0006e0 <__vector_dispatch_39>:
9d0006e0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0006e4:	00000000 	nop

Disassembly of section .vector_40:

9d000700 <__vector_dispatch_40>:
9d000700:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000704:	00000000 	nop

Disassembly of section .vector_41:

9d000720 <__vector_dispatch_41>:
9d000720:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000724:	00000000 	nop

Disassembly of section .vector_42:

9d000740 <__vector_dispatch_42>:
9d000740:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000744:	00000000 	nop

Disassembly of section .vector_43:

9d000760 <__vector_dispatch_43>:
9d000760:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000764:	00000000 	nop

Disassembly of section .vector_44:

9d000780 <__vector_dispatch_44>:
9d000780:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000784:	00000000 	nop

Disassembly of section .vector_45:

9d0007a0 <__vector_dispatch_45>:
9d0007a0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0007a4:	00000000 	nop

Disassembly of section .vector_46:

9d0007c0 <__vector_dispatch_46>:
9d0007c0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0007c4:	00000000 	nop

Disassembly of section .vector_47:

9d0007e0 <__vector_dispatch_47>:
9d0007e0:	0b400a3c 	j	9d0028f0 <.LFE0>
9d0007e4:	00000000 	nop

Disassembly of section .vector_48:

9d000800 <__vector_dispatch_48>:
9d000800:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000804:	00000000 	nop

Disassembly of section .vector_49:

9d000820 <__vector_dispatch_49>:
9d000820:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000824:	00000000 	nop

Disassembly of section .vector_50:

9d000840 <__vector_dispatch_50>:
9d000840:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000844:	00000000 	nop

Disassembly of section .vector_51:

9d000860 <__vector_dispatch_51>:
9d000860:	0b400a3c 	j	9d0028f0 <.LFE0>
9d000864:	00000000 	nop

Disassembly of section ._debug_exception:

bfc00480 <__DbgExecReturn>:
bfc00480:	409bf800 	mtc0	k1,c0_desave
bfc00484:	000000c0 	ehb
bfc00488:	3c1b9d00 	lui	k1,0x9d00
bfc0048c:	277b2938 	addiu	k1,k1,10552
bfc00490:	13600002 	beqz	k1,bfc0049c <__DbgExecReturn+0x1c>
bfc00494:	00000000 	nop
bfc00498:	409bc000 	mtc0	k1,c0_depc
bfc0049c:	401bf800 	mfc0	k1,c0_desave
bfc004a0:	000000c0 	ehb
bfc004a4:	4200001f 	deret
bfc004a8:	00000000 	nop

Disassembly of section .text:

9d001e00 <IntUart1Handler-0x108>:
#include "NU32.h"              // constants, functions for startup and UART
#include "direction.h"

void btInit(void){
  // set baud to 9600, to match terminal emulator; use default 8N1 of UART
  U1MODEbits.BRGH = 0;
9d001e00:	3c04bf80 	lui	a0,0xbf80
9d001e04:	94826000 	lhu	v0,24576(a0)
9d001e08:	7c0218c4 	ins	v0,zero,0x3,0x1
9d001e0c:	a4826000 	sh	v0,24576(a0)
  U1BRG = 520;
9d001e10:	24030208 	li	v1,520
9d001e14:	3c02bf80 	lui	v0,0xbf80
9d001e18:	ac436040 	sw	v1,24640(v0)

  // configure TX & RX pins
  U1STAbits.UTXEN = 1;
9d001e1c:	3c02bf80 	lui	v0,0xbf80
9d001e20:	8c456010 	lw	a1,24592(v0)
9d001e24:	24030001 	li	v1,1
9d001e28:	7c655284 	ins	a1,v1,0xa,0x1
9d001e2c:	ac456010 	sw	a1,24592(v0)
  U1STAbits.URXEN = 1;
9d001e30:	8c456010 	lw	a1,24592(v0)
9d001e34:	7c656304 	ins	a1,v1,0xc,0x1
9d001e38:	ac456010 	sw	a1,24592(v0)


  // configure the UART interrupts
  U1STAbits.URXISEL = 0x0; // RX interrupt when receive buffer not empty
9d001e3c:	8c456010 	lw	a1,24592(v0)
9d001e40:	7c053984 	ins	a1,zero,0x6,0x2
9d001e44:	ac456010 	sw	a1,24592(v0)
  IFS0bits.U1RXIF = 0;     // clear the rx interrupt flag.  for
9d001e48:	3c02bf88 	lui	v0,0xbf88
9d001e4c:	8c451030 	lw	a1,4144(v0)
9d001e50:	7c05dec4 	ins	a1,zero,0x1b,0x1
9d001e54:	ac451030 	sw	a1,4144(v0)
                           // tx or error interrupts you would also need to clear
                           // the respective flags
  IPC6bits.U1IP = 1;       // interrupt priority
9d001e58:	3c02bf88 	lui	v0,0xbf88
9d001e5c:	8c4510f0 	lw	a1,4336(v0)
9d001e60:	7c652084 	ins	a1,v1,0x2,0x3
9d001e64:	ac4510f0 	sw	a1,4336(v0)
  IEC0bits.U1RXIE = 1;     // enable the RX interrupt
9d001e68:	3c02bf88 	lui	v0,0xbf88
9d001e6c:	8c451060 	lw	a1,4192(v0)
9d001e70:	7c65dec4 	ins	a1,v1,0x1b,0x1
9d001e74:	ac451060 	sw	a1,4192(v0)

  // turn on UART1
  U1MODEbits.ON = 1;
9d001e78:	94826000 	lhu	v0,24576(a0)
9d001e7c:	7c627bc4 	ins	v0,v1,0xf,0x1
9d001e80:	a4826000 	sh	v0,24576(a0)
9d001e84:	03e00008 	jr	ra
9d001e88:	00000000 	nop

}

void pwmInit(){

      OC1CONbits.OCM = 0b110;  // PWM mode without fault pin; other OC1CON bits are defaults
9d001e8c:	3c02bf80 	lui	v0,0xbf80
9d001e90:	94433000 	lhu	v1,12288(v0)
9d001e94:	24040006 	li	a0,6
9d001e98:	7c831004 	ins	v1,a0,0x0,0x3
9d001e9c:	a4433000 	sh	v1,12288(v0)
      OC1CONbits.OCTSEL = 1;   // Use Timer3 for comparison
9d001ea0:	94443000 	lhu	a0,12288(v0)
9d001ea4:	24030001 	li	v1,1
9d001ea8:	7c6418c4 	ins	a0,v1,0x3,0x1
9d001eac:	a4443000 	sh	a0,12288(v0)
      OC1RS = 0;             // duty cycle = OC1RS/(PR3+1) = 50%
9d001eb0:	3c04bf80 	lui	a0,0xbf80
9d001eb4:	ac803020 	sw	zero,12320(a0)
      OC1R = 2000;              // initialize before turning OC1 on; afterward it is read-only
9d001eb8:	240507d0 	li	a1,2000
9d001ebc:	3c04bf80 	lui	a0,0xbf80
9d001ec0:	ac853010 	sw	a1,12304(a0)
      OC1CONbits.ON = 1;       // turn on OC1
9d001ec4:	94443000 	lhu	a0,12288(v0)
9d001ec8:	7c647bc4 	ins	a0,v1,0xf,0x1
9d001ecc:	a4443000 	sh	a0,12288(v0)

      T3CONbits.TCKPS = 0;     // Timer3 prescaler N=1 (1:1)
9d001ed0:	3c02bf80 	lui	v0,0xbf80
9d001ed4:	94440a00 	lhu	a0,2560(v0)
9d001ed8:	7c043104 	ins	a0,zero,0x4,0x3
9d001edc:	a4440a00 	sh	a0,2560(v0)
      PR3 = 3999;              // period = (PR3+1) * N * 12.5 ns = 50 us, 20 kHz
9d001ee0:	24050f9f 	li	a1,3999
9d001ee4:	3c04bf80 	lui	a0,0xbf80
9d001ee8:	ac850a20 	sw	a1,2592(a0)
      TMR3 = 0;                // initial TMR3 count is 0
9d001eec:	3c04bf80 	lui	a0,0xbf80
9d001ef0:	ac800a10 	sw	zero,2576(a0)
      T3CONbits.ON = 1;        // turn on Timer3  55555
9d001ef4:	94440a00 	lhu	a0,2560(v0)
9d001ef8:	7c647bc4 	ins	a0,v1,0xf,0x1
9d001efc:	a4440a00 	sh	a0,2560(v0)
9d001f00:	03e00008 	jr	ra
9d001f04:	00000000 	nop

9d001f08 <IntUart1Handler>:

}



void __ISR(_UART_1_VECTOR, IPL1SOFT) IntUart1Handler(void) {
9d001f08:	415de800 	rdpgpr	sp,sp
9d001f0c:	401a7000 	mfc0	k0,c0_epc
9d001f10:	401b6000 	mfc0	k1,c0_status
9d001f14:	27bdff90 	addiu	sp,sp,-112
9d001f18:	afba006c 	sw	k0,108(sp)
9d001f1c:	401a6002 	mfc0	k0,c0_srsctl
9d001f20:	afbb0068 	sw	k1,104(sp)
9d001f24:	afba0064 	sw	k0,100(sp)
9d001f28:	7c1b7844 	ins	k1,zero,0x1,0xf
9d001f2c:	377b0400 	ori	k1,k1,0x400
9d001f30:	409b6000 	mtc0	k1,c0_status
9d001f34:	afbf0054 	sw	ra,84(sp)
9d001f38:	afb90050 	sw	t9,80(sp)
9d001f3c:	afb8004c 	sw	t8,76(sp)
9d001f40:	afaf0048 	sw	t7,72(sp)
9d001f44:	afae0044 	sw	t6,68(sp)
9d001f48:	afad0040 	sw	t5,64(sp)
9d001f4c:	afac003c 	sw	t4,60(sp)
9d001f50:	afab0038 	sw	t3,56(sp)
9d001f54:	afaa0034 	sw	t2,52(sp)
9d001f58:	afa90030 	sw	t1,48(sp)
9d001f5c:	afa8002c 	sw	t0,44(sp)
9d001f60:	afa70028 	sw	a3,40(sp)
9d001f64:	afa60024 	sw	a2,36(sp)
9d001f68:	afa50020 	sw	a1,32(sp)
9d001f6c:	afa4001c 	sw	a0,28(sp)
9d001f70:	afa30018 	sw	v1,24(sp)
9d001f74:	afa20014 	sw	v0,20(sp)
9d001f78:	afa10010 	sw	at,16(sp)
9d001f7c:	00001012 	mflo	v0
9d001f80:	afa2005c 	sw	v0,92(sp)
9d001f84:	00001810 	mfhi	v1
9d001f88:	afa30058 	sw	v1,88(sp)
    TRISBbits.TRISB0 = 0;
9d001f8c:	3c02bf88 	lui	v0,0xbf88
9d001f90:	94436040 	lhu	v1,24640(v0)
9d001f94:	7c030004 	ins	v1,zero,0x0,0x1
9d001f98:	a4436040 	sh	v1,24640(v0)
    LATBbits.LATB0 = 1;
9d001f9c:	3c02bf88 	lui	v0,0xbf88
9d001fa0:	94436060 	lhu	v1,24672(v0)
9d001fa4:	24040001 	li	a0,1
9d001fa8:	7c830004 	ins	v1,a0,0x0,0x1
9d001fac:	a4436060 	sh	v1,24672(v0)
    LATBbits.LATB1 = 0;
9d001fb0:	94436060 	lhu	v1,24672(v0)
9d001fb4:	7c030844 	ins	v1,zero,0x1,0x1
9d001fb8:	a4436060 	sh	v1,24672(v0)
    LATBbits.LATB2 = 0;
9d001fbc:	94436060 	lhu	v1,24672(v0)
9d001fc0:	7c031084 	ins	v1,zero,0x2,0x1
9d001fc4:	a4436060 	sh	v1,24672(v0)
    LATBbits.LATB3 = 0;
9d001fc8:	94436060 	lhu	v1,24672(v0)
9d001fcc:	7c0318c4 	ins	v1,zero,0x3,0x1
9d001fd0:	a4436060 	sh	v1,24672(v0)
    LATBbits.LATB4 = 0;
9d001fd4:	94436060 	lhu	v1,24672(v0)
9d001fd8:	7c032104 	ins	v1,zero,0x4,0x1
9d001fdc:	a4436060 	sh	v1,24672(v0)

  unsigned char data = 0;
 if(U1STAbits.URXDA) { // poll to see if there is data to read in RX FIFO
9d001fe0:	3c02bf80 	lui	v0,0xbf80
9d001fe4:	8c426010 	lw	v0,24592(v0)
9d001fe8:	30420001 	andi	v0,v0,0x1
9d001fec:	10400040 	beqz	v0,9d0020f0 <IntUart1Handler+0x1e8>
9d001ff0:	3c02bf80 	lui	v0,0xbf80
      data = U1RXREG;
9d001ff4:	8c426030 	lw	v0,24624(v0)
9d001ff8:	304200ff 	andi	v0,v0,0xff

      if(data == 'F'){
9d001ffc:	24030046 	li	v1,70
9d002000:	1443000d 	bne	v0,v1,9d002038 <IntUart1Handler+0x130>
9d002004:	24030052 	li	v1,82
        dir(0);
9d002008:	0f4008c1 	jal	9d002304 <dir>
9d00200c:	00002021 	move	a0,zero
        OC1RS = 4000;
9d002010:	24030fa0 	li	v1,4000
9d002014:	3c02bf80 	lui	v0,0xbf80
9d002018:	ac433020 	sw	v1,12320(v0)
        LATBbits.LATB1 = 1;
9d00201c:	3c02bf88 	lui	v0,0xbf88
9d002020:	94436060 	lhu	v1,24672(v0)
9d002024:	24040001 	li	a0,1
9d002028:	7c830844 	ins	v1,a0,0x1,0x1
9d00202c:	a4436060 	sh	v1,24672(v0)
9d002030:	0b40083d 	j	9d0020f4 <IntUart1Handler+0x1ec>
9d002034:	3c02bf88 	lui	v0,0xbf88
      }else if(data == 'R'){
9d002038:	1443000d 	bne	v0,v1,9d002070 <IntUart1Handler+0x168>
9d00203c:	24030042 	li	v1,66
        dir(2);
9d002040:	0f4008c1 	jal	9d002304 <dir>
9d002044:	24040002 	li	a0,2
        LATBbits.LATB2 = 1;
9d002048:	3c02bf88 	lui	v0,0xbf88
9d00204c:	94436060 	lhu	v1,24672(v0)
9d002050:	24040001 	li	a0,1
9d002054:	7c831084 	ins	v1,a0,0x2,0x1
9d002058:	a4436060 	sh	v1,24672(v0)
        OC1RS = 4000;
9d00205c:	24030fa0 	li	v1,4000
9d002060:	3c02bf80 	lui	v0,0xbf80
9d002064:	ac433020 	sw	v1,12320(v0)
9d002068:	0b40083d 	j	9d0020f4 <IntUart1Handler+0x1ec>
9d00206c:	3c02bf88 	lui	v0,0xbf88
      }else if (data == 'B') {
9d002070:	1443000d 	bne	v0,v1,9d0020a8 <IntUart1Handler+0x1a0>
9d002074:	2403004c 	li	v1,76
        dir(1);
9d002078:	0f4008c1 	jal	9d002304 <dir>
9d00207c:	24040001 	li	a0,1
        LATBbits.LATB4 = 1;
9d002080:	3c02bf88 	lui	v0,0xbf88
9d002084:	94436060 	lhu	v1,24672(v0)
9d002088:	24040001 	li	a0,1
9d00208c:	7c832104 	ins	v1,a0,0x4,0x1
9d002090:	a4436060 	sh	v1,24672(v0)
        OC1RS = 4000;
9d002094:	24030fa0 	li	v1,4000
9d002098:	3c02bf80 	lui	v0,0xbf80
9d00209c:	ac433020 	sw	v1,12320(v0)
9d0020a0:	0b40083d 	j	9d0020f4 <IntUart1Handler+0x1ec>
9d0020a4:	3c02bf88 	lui	v0,0xbf88
      }else if(data == 'L'){
9d0020a8:	1443000d 	bne	v0,v1,9d0020e0 <IntUart1Handler+0x1d8>
9d0020ac:	24030044 	li	v1,68
        dir(3);
9d0020b0:	0f4008c1 	jal	9d002304 <dir>
9d0020b4:	24040003 	li	a0,3
        LATBbits.LATB3 = 1;
9d0020b8:	3c02bf88 	lui	v0,0xbf88
9d0020bc:	94436060 	lhu	v1,24672(v0)
9d0020c0:	24040001 	li	a0,1
9d0020c4:	7c8318c4 	ins	v1,a0,0x3,0x1
9d0020c8:	a4436060 	sh	v1,24672(v0)
        OC1RS = 4000;
9d0020cc:	24030fa0 	li	v1,4000
9d0020d0:	3c02bf80 	lui	v0,0xbf80
9d0020d4:	ac433020 	sw	v1,12320(v0)
9d0020d8:	0b40083d 	j	9d0020f4 <IntUart1Handler+0x1ec>
9d0020dc:	3c02bf88 	lui	v0,0xbf88
      }else if(data == 'D'){
9d0020e0:	14430004 	bne	v0,v1,9d0020f4 <IntUart1Handler+0x1ec>
9d0020e4:	3c02bf88 	lui	v0,0xbf88
        OC1RS = 0;
9d0020e8:	3c02bf80 	lui	v0,0xbf80
9d0020ec:	ac403020 	sw	zero,12320(v0)

      }
    }


    IFS0bits.U1RXIF = 0;
9d0020f0:	3c02bf88 	lui	v0,0xbf88
9d0020f4:	8c431030 	lw	v1,4144(v0)
9d0020f8:	7c03dec4 	ins	v1,zero,0x1b,0x1
9d0020fc:	ac431030 	sw	v1,4144(v0)

}
9d002100:	8fa2005c 	lw	v0,92(sp)
9d002104:	00400013 	mtlo	v0
9d002108:	8fa30058 	lw	v1,88(sp)
9d00210c:	00600011 	mthi	v1
9d002110:	8fbf0054 	lw	ra,84(sp)
9d002114:	8fb90050 	lw	t9,80(sp)
9d002118:	8fb8004c 	lw	t8,76(sp)
9d00211c:	8faf0048 	lw	t7,72(sp)
9d002120:	8fae0044 	lw	t6,68(sp)
9d002124:	8fad0040 	lw	t5,64(sp)
9d002128:	8fac003c 	lw	t4,60(sp)
9d00212c:	8fab0038 	lw	t3,56(sp)
9d002130:	8faa0034 	lw	t2,52(sp)
9d002134:	8fa90030 	lw	t1,48(sp)
9d002138:	8fa8002c 	lw	t0,44(sp)
9d00213c:	8fa70028 	lw	a3,40(sp)
9d002140:	8fa60024 	lw	a2,36(sp)
9d002144:	8fa50020 	lw	a1,32(sp)
9d002148:	8fa4001c 	lw	a0,28(sp)
9d00214c:	8fa30018 	lw	v1,24(sp)
9d002150:	8fa20014 	lw	v0,20(sp)
9d002154:	8fa10010 	lw	at,16(sp)
9d002158:	41606000 	di
9d00215c:	000000c0 	ehb
9d002160:	8fba006c 	lw	k0,108(sp)
9d002164:	8fbb0068 	lw	k1,104(sp)
9d002168:	409a7000 	mtc0	k0,c0_epc
9d00216c:	8fba0064 	lw	k0,100(sp)
9d002170:	27bd0070 	addiu	sp,sp,112
9d002174:	409a6002 	mtc0	k0,c0_srsctl
9d002178:	41dde800 	wrpgpr	sp,sp
9d00217c:	409b6000 	mtc0	k1,c0_status
9d002180:	42000018 	eret

9d002184 <main>:

int main(void) {
9d002184:	27bdffe8 	addiu	sp,sp,-24
9d002188:	afbf0014 	sw	ra,20(sp)
  NU32_Startup();   // cache on, interrupts on, LED/button init, UART init
9d00218c:	0f400938 	jal	9d0024e0 <NU32_Startup>
9d002190:	00000000 	nop
  __builtin_disable_interrupts();
9d002194:	41626000 	di	v0
9d002198:	000000c0 	ehb
  OC1CONbits.OCM = 0b110;  // PWM mode without fault pin; other OC1CON bits are defaults
9d00219c:	3c02bf80 	lui	v0,0xbf80
9d0021a0:	94433000 	lhu	v1,12288(v0)
9d0021a4:	24040006 	li	a0,6
9d0021a8:	7c831004 	ins	v1,a0,0x0,0x3
9d0021ac:	a4433000 	sh	v1,12288(v0)
  OC1CONbits.OCTSEL = 1;   // Use Timer3 for comparison
9d0021b0:	94443000 	lhu	a0,12288(v0)
9d0021b4:	24030001 	li	v1,1
9d0021b8:	7c6418c4 	ins	a0,v1,0x3,0x1
9d0021bc:	a4443000 	sh	a0,12288(v0)
  OC1RS = 0;             // duty cycle = OC1RS/(PR3+1) = 50%
9d0021c0:	3c04bf80 	lui	a0,0xbf80
9d0021c4:	ac803020 	sw	zero,12320(a0)
  OC1R = 0;              // initialize before turning OC1 on; afterward it is read-only
9d0021c8:	3c04bf80 	lui	a0,0xbf80
9d0021cc:	ac803010 	sw	zero,12304(a0)
  OC1CONbits.ON = 1;       // turn on OC1
9d0021d0:	94443000 	lhu	a0,12288(v0)
9d0021d4:	7c647bc4 	ins	a0,v1,0xf,0x1
9d0021d8:	a4443000 	sh	a0,12288(v0)

  T3CONbits.TCKPS = 0;     // Timer3 prescaler N=1 (1:1)
9d0021dc:	3c02bf80 	lui	v0,0xbf80
9d0021e0:	94440a00 	lhu	a0,2560(v0)
9d0021e4:	7c043104 	ins	a0,zero,0x4,0x3
9d0021e8:	a4440a00 	sh	a0,2560(v0)
  PR3 = 3999;              // period = (PR3+1) * N * 12.5 ns = 50 us, 20 kHz
9d0021ec:	24050f9f 	li	a1,3999
9d0021f0:	3c04bf80 	lui	a0,0xbf80
9d0021f4:	ac850a20 	sw	a1,2592(a0)
  TMR3 = 0;                // initial TMR3 count is 0
9d0021f8:	3c04bf80 	lui	a0,0xbf80
9d0021fc:	ac800a10 	sw	zero,2576(a0)
  T3CONbits.ON = 1;        // turn on Timer3
9d002200:	94440a00 	lhu	a0,2560(v0)
9d002204:	7c647bc4 	ins	a0,v1,0xf,0x1
9d002208:	a4440a00 	sh	a0,2560(v0)

// motor direction control bits
// pin 10 to 13
  TRISBbits.TRISB10 = 0;
9d00220c:	3c02bf88 	lui	v0,0xbf88
9d002210:	94446040 	lhu	a0,24640(v0)
9d002214:	7c045284 	ins	a0,zero,0xa,0x1
9d002218:	a4446040 	sh	a0,24640(v0)
  TRISBbits.TRISB11 = 0;
9d00221c:	94446040 	lhu	a0,24640(v0)
9d002220:	7c045ac4 	ins	a0,zero,0xb,0x1
9d002224:	a4446040 	sh	a0,24640(v0)
  TRISBbits.TRISB12 = 0;
9d002228:	94446040 	lhu	a0,24640(v0)
9d00222c:	7c046304 	ins	a0,zero,0xc,0x1
9d002230:	a4446040 	sh	a0,24640(v0)
  TRISBbits.TRISB13 = 0;
9d002234:	94446040 	lhu	a0,24640(v0)
9d002238:	7c046b44 	ins	a0,zero,0xd,0x1
9d00223c:	a4446040 	sh	a0,24640(v0)
// pin B1 to B4 SIGNAL LIGHTS
  TRISBbits.TRISB1 = 0;
9d002240:	94446040 	lhu	a0,24640(v0)
9d002244:	7c040844 	ins	a0,zero,0x1,0x1
9d002248:	a4446040 	sh	a0,24640(v0)
  TRISBbits.TRISB2 = 0;
9d00224c:	94446040 	lhu	a0,24640(v0)
9d002250:	7c041084 	ins	a0,zero,0x2,0x1
9d002254:	a4446040 	sh	a0,24640(v0)
  TRISBbits.TRISB3 = 0;
9d002258:	94446040 	lhu	a0,24640(v0)
9d00225c:	7c0418c4 	ins	a0,zero,0x3,0x1
9d002260:	a4446040 	sh	a0,24640(v0)
  TRISBbits.TRISB4 = 0;
9d002264:	94446040 	lhu	a0,24640(v0)
9d002268:	7c042104 	ins	a0,zero,0x4,0x1
9d00226c:	a4446040 	sh	a0,24640(v0)
//  pwmInit();
  //btInit();
  U1MODEbits.BRGH = 0;
9d002270:	3c04bf80 	lui	a0,0xbf80
9d002274:	94826000 	lhu	v0,24576(a0)
9d002278:	7c0218c4 	ins	v0,zero,0x3,0x1
9d00227c:	a4826000 	sh	v0,24576(a0)
  U1BRG = 520;
9d002280:	24050208 	li	a1,520
9d002284:	3c02bf80 	lui	v0,0xbf80
9d002288:	ac456040 	sw	a1,24640(v0)

  // configure TX & RX pins
  U1STAbits.UTXEN = 1;
9d00228c:	3c02bf80 	lui	v0,0xbf80
9d002290:	8c456010 	lw	a1,24592(v0)
9d002294:	7c655284 	ins	a1,v1,0xa,0x1
9d002298:	ac456010 	sw	a1,24592(v0)
  U1STAbits.URXEN = 1;
9d00229c:	8c456010 	lw	a1,24592(v0)
9d0022a0:	7c656304 	ins	a1,v1,0xc,0x1
9d0022a4:	ac456010 	sw	a1,24592(v0)


  // configure the UART interrupts
  U1STAbits.URXISEL = 0x0; // RX interrupt when receive buffer not empty
9d0022a8:	8c456010 	lw	a1,24592(v0)
9d0022ac:	7c053984 	ins	a1,zero,0x6,0x2
9d0022b0:	ac456010 	sw	a1,24592(v0)
  IFS0bits.U1RXIF = 0;     // clear the rx interrupt flag.  for
9d0022b4:	3c02bf88 	lui	v0,0xbf88
9d0022b8:	8c451030 	lw	a1,4144(v0)
9d0022bc:	7c05dec4 	ins	a1,zero,0x1b,0x1
9d0022c0:	ac451030 	sw	a1,4144(v0)
                           // tx or error interrupts you would also need to clear
                           // the respective flags
  IPC6bits.U1IP = 1;       // interrupt priority
9d0022c4:	3c02bf88 	lui	v0,0xbf88
9d0022c8:	8c4510f0 	lw	a1,4336(v0)
9d0022cc:	7c652084 	ins	a1,v1,0x2,0x3
9d0022d0:	ac4510f0 	sw	a1,4336(v0)
  IEC0bits.U1RXIE = 1;     // enable the RX interrupt
9d0022d4:	3c02bf88 	lui	v0,0xbf88
9d0022d8:	8c451060 	lw	a1,4192(v0)
9d0022dc:	7c65dec4 	ins	a1,v1,0x1b,0x1
9d0022e0:	ac451060 	sw	a1,4192(v0)

  // turn on UART1
  U1MODEbits.ON = 1;
9d0022e4:	94826000 	lhu	v0,24576(a0)
9d0022e8:	7c627bc4 	ins	v0,v1,0xf,0x1
9d0022ec:	a4826000 	sh	v0,24576(a0)
  __builtin_enable_interrupts();
9d0022f0:	41626020 	ei	v0


  return 0;
}
9d0022f4:	00001021 	move	v0,zero
9d0022f8:	8fbf0014 	lw	ra,20(sp)
9d0022fc:	03e00008 	jr	ra
9d002300:	27bd0018 	addiu	sp,sp,24

9d002304 <dir>:
#include "direction.h"
#include <xc.h>

void dir(int direction){

  switch (direction) {
9d002304:	24020001 	li	v0,1
9d002308:	10820028 	beq	a0,v0,9d0023ac <dir+0xa8>
9d00230c:	28820002 	slti	v0,a0,2
9d002310:	10400005 	beqz	v0,9d002328 <dir+0x24>
9d002314:	24020002 	li	v0,2
9d002318:	10800015 	beqz	a0,9d002370 <dir+0x6c>
9d00231c:	3c02bf88 	lui	v0,0xbf88
9d002320:	0b4008ce 	j	9d002338 <dir+0x34>
9d002324:	00000000 	nop
9d002328:	10820030 	beq	a0,v0,9d0023ec <dir+0xe8>
9d00232c:	24020003 	li	v0,3
9d002330:	1082003d 	beq	a0,v0,9d002428 <dir+0x124>
9d002334:	3c02bf88 	lui	v0,0xbf88

    default:{
      LATBbits.LATB10 = 1;
9d002338:	94446060 	lhu	a0,24672(v0)
9d00233c:	24030001 	li	v1,1
9d002340:	7c645284 	ins	a0,v1,0xa,0x1
9d002344:	a4446060 	sh	a0,24672(v0)
      LATBbits.LATB11 = 1;
9d002348:	94446060 	lhu	a0,24672(v0)
9d00234c:	7c645ac4 	ins	a0,v1,0xb,0x1
9d002350:	a4446060 	sh	a0,24672(v0)
      LATBbits.LATB12 = 1;
9d002354:	94446060 	lhu	a0,24672(v0)
9d002358:	7c646304 	ins	a0,v1,0xc,0x1
9d00235c:	a4446060 	sh	a0,24672(v0)
      LATBbits.LATB13 = 1;
9d002360:	94446060 	lhu	a0,24672(v0)
9d002364:	7c646b44 	ins	a0,v1,0xd,0x1
9d002368:	a4446060 	sh	a0,24672(v0)
    }
    case 0://forward
    {
      LATBbits.LATB10 = 0;
9d00236c:	3c02bf88 	lui	v0,0xbf88
9d002370:	94436060 	lhu	v1,24672(v0)
9d002374:	7c035284 	ins	v1,zero,0xa,0x1
9d002378:	a4436060 	sh	v1,24672(v0)
      LATBbits.LATB11 = 1;
9d00237c:	94436060 	lhu	v1,24672(v0)
9d002380:	24040001 	li	a0,1
9d002384:	7c835ac4 	ins	v1,a0,0xb,0x1
9d002388:	a4436060 	sh	v1,24672(v0)
      LATBbits.LATB12 = 0;
9d00238c:	94436060 	lhu	v1,24672(v0)
9d002390:	7c036304 	ins	v1,zero,0xc,0x1
9d002394:	a4436060 	sh	v1,24672(v0)
      LATBbits.LATB13 = 1;
9d002398:	94436060 	lhu	v1,24672(v0)
9d00239c:	7c836b44 	ins	v1,a0,0xd,0x1
9d0023a0:	a4436060 	sh	v1,24672(v0)
      //led green on
      break;
9d0023a4:	03e00008 	jr	ra
9d0023a8:	00000000 	nop
    }

    case 1://backford
    {
      LATBbits.LATB10 = 1;
9d0023ac:	3c02bf88 	lui	v0,0xbf88
9d0023b0:	94436060 	lhu	v1,24672(v0)
9d0023b4:	24040001 	li	a0,1
9d0023b8:	7c835284 	ins	v1,a0,0xa,0x1
9d0023bc:	a4436060 	sh	v1,24672(v0)
      LATBbits.LATB11 = 0;
9d0023c0:	94436060 	lhu	v1,24672(v0)
9d0023c4:	7c035ac4 	ins	v1,zero,0xb,0x1
9d0023c8:	a4436060 	sh	v1,24672(v0)
      LATBbits.LATB12 = 1;
9d0023cc:	94436060 	lhu	v1,24672(v0)
9d0023d0:	7c836304 	ins	v1,a0,0xc,0x1
9d0023d4:	a4436060 	sh	v1,24672(v0)
      LATBbits.LATB13 = 0;
9d0023d8:	94436060 	lhu	v1,24672(v0)
9d0023dc:	7c036b44 	ins	v1,zero,0xd,0x1
9d0023e0:	a4436060 	sh	v1,24672(v0)
      //led red on
      break;
9d0023e4:	03e00008 	jr	ra
9d0023e8:	00000000 	nop
    }

    case 2://turn left
    {
      LATBbits.LATB10 = 0;
9d0023ec:	3c02bf88 	lui	v0,0xbf88
9d0023f0:	94436060 	lhu	v1,24672(v0)
9d0023f4:	7c035284 	ins	v1,zero,0xa,0x1
9d0023f8:	a4436060 	sh	v1,24672(v0)
      LATBbits.LATB11 = 0;
9d0023fc:	94436060 	lhu	v1,24672(v0)
9d002400:	7c035ac4 	ins	v1,zero,0xb,0x1
9d002404:	a4436060 	sh	v1,24672(v0)
      LATBbits.LATB12 = 0;
9d002408:	94436060 	lhu	v1,24672(v0)
9d00240c:	7c036304 	ins	v1,zero,0xc,0x1
9d002410:	a4436060 	sh	v1,24672(v0)
      LATBbits.LATB13 = 0;
9d002414:	94436060 	lhu	v1,24672(v0)
9d002418:	7c036b44 	ins	v1,zero,0xd,0x1
9d00241c:	a4436060 	sh	v1,24672(v0)
      //led yellow1 on
      break;
9d002420:	03e00008 	jr	ra
9d002424:	00000000 	nop
    }

    case 3://turn right
    {
      LATBbits.LATB10 = 1;
9d002428:	94446060 	lhu	a0,24672(v0)
9d00242c:	24030001 	li	v1,1
9d002430:	7c645284 	ins	a0,v1,0xa,0x1
9d002434:	a4446060 	sh	a0,24672(v0)
      LATBbits.LATB11 = 1;
9d002438:	94446060 	lhu	a0,24672(v0)
9d00243c:	7c645ac4 	ins	a0,v1,0xb,0x1
9d002440:	a4446060 	sh	a0,24672(v0)
      LATBbits.LATB12 = 1;
9d002444:	94446060 	lhu	a0,24672(v0)
9d002448:	7c646304 	ins	a0,v1,0xc,0x1
9d00244c:	a4446060 	sh	a0,24672(v0)
      LATBbits.LATB13 = 1;
9d002450:	94446060 	lhu	a0,24672(v0)
9d002454:	7c646b44 	ins	a0,v1,0xd,0x1
9d002458:	a4446060 	sh	a0,24672(v0)
9d00245c:	03e00008 	jr	ra
9d002460:	00000000 	nop

9d002464 <pwmInit>:
    }
  }
}

void pwmInit(){
      T3CONbits.TCKPS = 0;     // Timer3 prescaler N=1 (1:1)
9d002464:	3c03bf80 	lui	v1,0xbf80
9d002468:	94620a00 	lhu	v0,2560(v1)
9d00246c:	7c023104 	ins	v0,zero,0x4,0x3
9d002470:	a4620a00 	sh	v0,2560(v1)
      PR3 = 3999;              // period = (PR3+1) * N * 12.5 ns = 50 us, 20 kHz
9d002474:	24040f9f 	li	a0,3999
9d002478:	3c02bf80 	lui	v0,0xbf80
9d00247c:	ac440a20 	sw	a0,2592(v0)
      TMR3 = 0;                // initial TMR3 count is 0
9d002480:	3c02bf80 	lui	v0,0xbf80
9d002484:	ac400a10 	sw	zero,2576(v0)

      OC1CONbits.OCTSEL = 1;   // Use Timer3 for comparison
9d002488:	3c02bf80 	lui	v0,0xbf80
9d00248c:	94453000 	lhu	a1,12288(v0)
9d002490:	24040001 	li	a0,1
9d002494:	7c8518c4 	ins	a1,a0,0x3,0x1
9d002498:	a4453000 	sh	a1,12288(v0)

      OC1CONbits.OCM = 0b110;  // PWM mode without fault pin; other OC1CON bits are defaults
9d00249c:	94453000 	lhu	a1,12288(v0)
9d0024a0:	24060006 	li	a2,6
9d0024a4:	7cc51004 	ins	a1,a2,0x0,0x3
9d0024a8:	a4453000 	sh	a1,12288(v0)
      OC1RS = 0;             // duty cycle = OC1RS/(PR3+1) = 50%
9d0024ac:	3c05bf80 	lui	a1,0xbf80
9d0024b0:	aca03020 	sw	zero,12320(a1)
      OC1R = 2000;              // initialize before turning OC1 on; afterward it is read-only
9d0024b4:	240607d0 	li	a2,2000
9d0024b8:	3c05bf80 	lui	a1,0xbf80
9d0024bc:	aca63010 	sw	a2,12304(a1)
      T3CONbits.ON = 1;         // turn the timer3 on
9d0024c0:	94650a00 	lhu	a1,2560(v1)
9d0024c4:	7c857bc4 	ins	a1,a0,0xf,0x1
9d0024c8:	a4650a00 	sh	a1,2560(v1)
      OC1CONbits.ON = 1;       // turn on OC1
9d0024cc:	94433000 	lhu	v1,12288(v0)
9d0024d0:	7c837bc4 	ins	v1,a0,0xf,0x1
9d0024d4:	a4433000 	sh	v1,12288(v0)
9d0024d8:	03e00008 	jr	ra
9d0024dc:	00000000 	nop

Disassembly of section .text:

9d0024e0 <NU32_Startup>:

// Perform startup routines:
//  Make NU32_LED1 and NU32_LED2 pins outputs (NU32_USER is by default an input)
//  Initialize the serial port - UART3 (no interrupt) 
//  Enable interrupts
void NU32_Startup() {
9d0024e0:	27bdfff8 	addiu	sp,sp,-8
9d0024e4:	afbf0004 	sw	ra,4(sp)
  // disable interrupts
  __builtin_disable_interrupts();
9d0024e8:	41626000 	di	v0
9d0024ec:	000000c0 	ehb
  // see Chapter 2 "CPU for Devices with M4K Core" of the PIC32 reference manual
  // most of the other bits have prescribed values
  // microchip does not provide a _CP0_SET_CONFIG macro, so we directly use
  // the compiler built-in command _mtc0
  // to disable cache, use 0xa4210582 
  __builtin_mtc0(_CP0_CONFIG, _CP0_CONFIG_SELECT, 0xa4210583); 
9d0024f0:	3c02a421 	lui	v0,0xa421
9d0024f4:	24420583 	addiu	v0,v0,1411
9d0024f8:	40828000 	mtc0	v0,c0_config
9d0024fc:	000000c0 	ehb
  
  // set the prefectch cache wait state to 2, as per the
  // electrical characteristics data sheet
  CHECONbits.PFMWS = 0x2;   
9d002500:	3c02bf88 	lui	v0,0xbf88
9d002504:	8c434000 	lw	v1,16384(v0)
9d002508:	24050002 	li	a1,2
9d00250c:	7ca31004 	ins	v1,a1,0x0,0x3
9d002510:	ac434000 	sw	v1,16384(v0)

  //enable prefetch for cacheable and noncacheable memory
  CHECONbits.PREFEN = 0x3; 
9d002514:	8c434000 	lw	v1,16384(v0)
9d002518:	24040003 	li	a0,3
9d00251c:	7c832904 	ins	v1,a0,0x4,0x2
9d002520:	ac434000 	sw	v1,16384(v0)

  // 0 data RAM access wait states
  BMXCONbits.BMXWSDRM = 0x0;
9d002524:	3c02bf88 	lui	v0,0xbf88
9d002528:	8c432000 	lw	v1,8192(v0)
9d00252c:	7c033184 	ins	v1,zero,0x6,0x1
9d002530:	ac432000 	sw	v1,8192(v0)
  
  // enable multi vector interrupts
  INTCONbits.MVEC = 0x1;
9d002534:	3c02bf88 	lui	v0,0xbf88
9d002538:	8c461000 	lw	a2,4096(v0)
9d00253c:	24030001 	li	v1,1
9d002540:	7c666304 	ins	a2,v1,0xc,0x1
9d002544:	ac461000 	sw	a2,4096(v0)

  // disable JTAG to get B10, B11, B12 and B13 back
  DDPCONbits.JTAGEN = 0;
9d002548:	3c02bf81 	lui	v0,0xbf81
9d00254c:	9046f200 	lbu	a2,-3584(v0)
9d002550:	7c0618c4 	ins	a2,zero,0x3,0x1
9d002554:	a046f200 	sb	a2,-3584(v0)

  TRISFCLR = 0x0003;  // Make F0 and F1 outputs (LED1 and LED2)
9d002558:	3c02bf88 	lui	v0,0xbf88
9d00255c:	ac446144 	sw	a0,24900(v0)
  NU32_LED1 = 1;      // LED1 is off
9d002560:	3c02bf88 	lui	v0,0xbf88
9d002564:	90446160 	lbu	a0,24928(v0)
9d002568:	7c640004 	ins	a0,v1,0x0,0x1
9d00256c:	a0446160 	sb	a0,24928(v0)
  NU32_LED2 = 0;      // LED2 is on
9d002570:	90446160 	lbu	a0,24928(v0)
9d002574:	7c040844 	ins	a0,zero,0x1,0x1
9d002578:	a0446160 	sb	a0,24928(v0)

  // turn on UART3 without an interrupt
  U3MODEbits.BRGH = 0; // set baud to NU32_DESIRED_BAUD
9d00257c:	3c02bf80 	lui	v0,0xbf80
9d002580:	94446400 	lhu	a0,25600(v0)
9d002584:	7c0418c4 	ins	a0,zero,0x3,0x1
9d002588:	a4446400 	sh	a0,25600(v0)
  U3BRG = ((NU32_SYS_FREQ / NU32_DESIRED_BAUD) / 16) - 1;
9d00258c:	24060014 	li	a2,20
9d002590:	3c04bf80 	lui	a0,0xbf80
9d002594:	ac866440 	sw	a2,25664(a0)

  // 8 bit, no parity bit, and 1 stop bit (8N1 setup)
  U3MODEbits.PDSEL = 0;
9d002598:	94446400 	lhu	a0,25600(v0)
9d00259c:	7c041044 	ins	a0,zero,0x1,0x2
9d0025a0:	a4446400 	sh	a0,25600(v0)
  U3MODEbits.STSEL = 0;
9d0025a4:	94446400 	lhu	a0,25600(v0)
9d0025a8:	7c040004 	ins	a0,zero,0x0,0x1
9d0025ac:	a4446400 	sh	a0,25600(v0)

  // configure TX & RX pins as output & input pins
  U3STAbits.UTXEN = 1;
9d0025b0:	3c04bf80 	lui	a0,0xbf80
9d0025b4:	8c866410 	lw	a2,25616(a0)
9d0025b8:	7c665284 	ins	a2,v1,0xa,0x1
9d0025bc:	ac866410 	sw	a2,25616(a0)
  U3STAbits.URXEN = 1;
9d0025c0:	8c866410 	lw	a2,25616(a0)
9d0025c4:	7c666304 	ins	a2,v1,0xc,0x1
9d0025c8:	ac866410 	sw	a2,25616(a0)
  // configure hardware flow control using RTS and CTS
  U3MODEbits.UEN = 2;
9d0025cc:	94446400 	lhu	a0,25600(v0)
9d0025d0:	7ca44a04 	ins	a0,a1,0x8,0x2
9d0025d4:	a4446400 	sh	a0,25600(v0)

  // enable the uart
  U3MODEbits.ON = 1;
9d0025d8:	94446400 	lhu	a0,25600(v0)
9d0025dc:	7c647bc4 	ins	a0,v1,0xf,0x1
9d0025e0:	a4446400 	sh	a0,25600(v0)

  __builtin_enable_interrupts();
9d0025e4:	41626020 	ei	v0
}
9d0025e8:	8fbf0004 	lw	ra,4(sp)
9d0025ec:	03e00008 	jr	ra
9d0025f0:	27bd0008 	addiu	sp,sp,8

9d0025f4 <NU32_ReadUART3>:
// Read from UART3
// block other functions until you get a '\r' or '\n'
// send the pointer to your char array and the number of elements in the array
void NU32_ReadUART3(char * message, int maxLength) {
  char data = 0;
  int complete = 0, num_bytes = 0;
9d0025f4:	00003021 	move	a2,zero
  // loop until you get a '\r' or '\n'
  while (!complete) {
    if (U3STAbits.URXDA) { // if data is available
9d0025f8:	3c03bf80 	lui	v1,0xbf80
      data = U3RXREG;      // read the data
9d0025fc:	3c08bf80 	lui	t0,0xbf80
      if ((data == '\n') || (data == '\r')) {
9d002600:	2407000a 	li	a3,10
9d002604:	0b400991 	j	9d002644 <NU32_ReadUART3+0x50>
9d002608:	2409000d 	li	t1,13
void NU32_ReadUART3(char * message, int maxLength) {
  char data = 0;
  int complete = 0, num_bytes = 0;
  // loop until you get a '\r' or '\n'
  while (!complete) {
    if (U3STAbits.URXDA) { // if data is available
9d00260c:	8c626410 	lw	v0,25616(v1)
9d002610:	30420001 	andi	v0,v0,0x1
9d002614:	1040fffd 	beqz	v0,9d00260c <NU32_ReadUART3+0x18>
9d002618:	00000000 	nop
      data = U3RXREG;      // read the data
9d00261c:	8d026430 	lw	v0,25648(t0)
9d002620:	7c021420 	seb	v0,v0
      if ((data == '\n') || (data == '\r')) {
9d002624:	5047000e 	beql	v0,a3,9d002660 <NU32_ReadUART3+0x6c>
9d002628:	00862021 	addu	a0,a0,a2
9d00262c:	1049000b 	beq	v0,t1,9d00265c <NU32_ReadUART3+0x68>
9d002630:	00865021 	addu	t2,a0,a2
        complete = 1;
      } else {
        message[num_bytes] = data;
9d002634:	a1420000 	sb	v0,0(t2)
        ++num_bytes;
9d002638:	24c60001 	addiu	a2,a2,1
        // roll over if the array is too small
        if (num_bytes >= maxLength) {
9d00263c:	00c5102a 	slt	v0,a2,a1
          num_bytes = 0;
9d002640:	0002300a 	movz	a2,zero,v0
void NU32_ReadUART3(char * message, int maxLength) {
  char data = 0;
  int complete = 0, num_bytes = 0;
  // loop until you get a '\r' or '\n'
  while (!complete) {
    if (U3STAbits.URXDA) { // if data is available
9d002644:	8c626410 	lw	v0,25616(v1)
9d002648:	30420001 	andi	v0,v0,0x1
9d00264c:	1040ffef 	beqz	v0,9d00260c <NU32_ReadUART3+0x18>
9d002650:	00000000 	nop
9d002654:	0b400987 	j	9d00261c <NU32_ReadUART3+0x28>
9d002658:	00000000 	nop
        }
      }
    }
  }
  // end the string
  message[num_bytes] = '\0';
9d00265c:	00862021 	addu	a0,a0,a2
9d002660:	03e00008 	jr	ra
9d002664:	a0800000 	sb	zero,0(a0)

9d002668 <NU32_WriteUART3>:
}

// Write a character array using UART3
void NU32_WriteUART3(const char * string) {
  while (*string != '\0') {
9d002668:	80850000 	lb	a1,0(a0)
9d00266c:	10a0000b 	beqz	a1,9d00269c <NU32_WriteUART3+0x34>
9d002670:	3c03bf80 	lui	v1,0xbf80
    while (U3STAbits.UTXBF) {
      ; // wait until tx buffer isn't full
    }
    U3TXREG = *string;
9d002674:	3c06bf80 	lui	a2,0xbf80
}

// Write a character array using UART3
void NU32_WriteUART3(const char * string) {
  while (*string != '\0') {
    while (U3STAbits.UTXBF) {
9d002678:	8c626410 	lw	v0,25616(v1)
9d00267c:	30420200 	andi	v0,v0,0x200
9d002680:	1440fffd 	bnez	v0,9d002678 <NU32_WriteUART3+0x10>
9d002684:	00000000 	nop
      ; // wait until tx buffer isn't full
    }
    U3TXREG = *string;
9d002688:	acc56420 	sw	a1,25632(a2)
    ++string;
9d00268c:	24840001 	addiu	a0,a0,1
  message[num_bytes] = '\0';
}

// Write a character array using UART3
void NU32_WriteUART3(const char * string) {
  while (*string != '\0') {
9d002690:	80850000 	lb	a1,0(a0)
9d002694:	14a0fff8 	bnez	a1,9d002678 <NU32_WriteUART3+0x10>
9d002698:	00000000 	nop
9d00269c:	03e00008 	jr	ra
9d0026a0:	00000000 	nop

Disassembly of section .text.general_exception:

9d0026a4 <_general_exception_context>:
9d0026a4:	27bdffa8 	addiu	sp,sp,-88
9d0026a8:	afa10004 	sw	at,4(sp)
9d0026ac:	afa20008 	sw	v0,8(sp)
9d0026b0:	afa3000c 	sw	v1,12(sp)
9d0026b4:	afa40010 	sw	a0,16(sp)
9d0026b8:	afa50014 	sw	a1,20(sp)
9d0026bc:	afa60018 	sw	a2,24(sp)
9d0026c0:	afa7001c 	sw	a3,28(sp)
9d0026c4:	afa80020 	sw	t0,32(sp)
9d0026c8:	afa90024 	sw	t1,36(sp)
9d0026cc:	afaa0028 	sw	t2,40(sp)
9d0026d0:	afab002c 	sw	t3,44(sp)
9d0026d4:	afac0030 	sw	t4,48(sp)
9d0026d8:	afad0034 	sw	t5,52(sp)
9d0026dc:	afae0038 	sw	t6,56(sp)
9d0026e0:	afaf003c 	sw	t7,60(sp)
9d0026e4:	afb80040 	sw	t8,64(sp)
9d0026e8:	afb90044 	sw	t9,68(sp)
9d0026ec:	afbf0048 	sw	ra,72(sp)
9d0026f0:	00004012 	mflo	t0
9d0026f4:	afa8004c 	sw	t0,76(sp)
9d0026f8:	00004010 	mfhi	t0
9d0026fc:	afa80050 	sw	t0,80(sp)
9d002700:	3c1a9d00 	lui	k0,0x9d00
9d002704:	275a28a8 	addiu	k0,k0,10408
9d002708:	00000000 	nop
9d00270c:	40046800 	mfc0	a0,c0_cause
9d002710:	40056000 	mfc0	a1,c0_status
9d002714:	0340f809 	jalr	k0
9d002718:	00000000 	nop
9d00271c:	8fa80050 	lw	t0,80(sp)
9d002720:	01000011 	mthi	t0
9d002724:	8fa8004c 	lw	t0,76(sp)
9d002728:	01000013 	mtlo	t0
9d00272c:	8fa10004 	lw	at,4(sp)
9d002730:	8fa20008 	lw	v0,8(sp)
9d002734:	8fa3000c 	lw	v1,12(sp)
9d002738:	8fa40010 	lw	a0,16(sp)
9d00273c:	8fa50014 	lw	a1,20(sp)
9d002740:	8fa60018 	lw	a2,24(sp)
9d002744:	8fa7001c 	lw	a3,28(sp)
9d002748:	8fa80020 	lw	t0,32(sp)
9d00274c:	8fa90024 	lw	t1,36(sp)
9d002750:	8faa0028 	lw	t2,40(sp)
9d002754:	8fab002c 	lw	t3,44(sp)
9d002758:	8fac0030 	lw	t4,48(sp)
9d00275c:	8fad0034 	lw	t5,52(sp)
9d002760:	8fae0038 	lw	t6,56(sp)
9d002764:	8faf003c 	lw	t7,60(sp)
9d002768:	8fb80040 	lw	t8,64(sp)
9d00276c:	8fb90044 	lw	t9,68(sp)
9d002770:	8fbf0048 	lw	ra,72(sp)
9d002774:	27bd0058 	addiu	sp,sp,88
9d002778:	000000c0 	ehb
9d00277c:	42000018 	eret

Disassembly of section .text:

9d002780 <btInit>:
#include "NU32.h"
#include "direction.h"

void btInit(void){
  // set baud to 230400, to match terminal emulator; use default 8N1 of UART
  U1MODEbits.BRGH = 0;
9d002780:	3c04bf80 	lui	a0,0xbf80
9d002784:	94826000 	lhu	v0,24576(a0)
9d002788:	7c0218c4 	ins	v0,zero,0x3,0x1
9d00278c:	a4826000 	sh	v0,24576(a0)
  U1BRG = 520;
9d002790:	24030208 	li	v1,520
9d002794:	3c02bf80 	lui	v0,0xbf80
9d002798:	ac436040 	sw	v1,24640(v0)

  // configure TX & RX pins
  U1STAbits.UTXEN = 1;
9d00279c:	3c02bf80 	lui	v0,0xbf80
9d0027a0:	8c456010 	lw	a1,24592(v0)
9d0027a4:	24030001 	li	v1,1
9d0027a8:	7c655284 	ins	a1,v1,0xa,0x1
9d0027ac:	ac456010 	sw	a1,24592(v0)
  U1STAbits.URXEN = 1;
9d0027b0:	8c456010 	lw	a1,24592(v0)
9d0027b4:	7c656304 	ins	a1,v1,0xc,0x1
9d0027b8:	ac456010 	sw	a1,24592(v0)


  // configure the UART interrupts
  U1STAbits.URXISEL = 0x0; // RX interrupt when receive buffer not empty
9d0027bc:	8c456010 	lw	a1,24592(v0)
9d0027c0:	7c053984 	ins	a1,zero,0x6,0x2
9d0027c4:	ac456010 	sw	a1,24592(v0)
  IFS0bits.U1RXIF = 0;  //  y=hh the rx interrupt flag.  for
9d0027c8:	3c02bf88 	lui	v0,0xbf88
9d0027cc:	8c451030 	lw	a1,4144(v0)
9d0027d0:	7c05dec4 	ins	a1,zero,0x1b,0x1
9d0027d4:	ac451030 	sw	a1,4144(v0)
                           // tx or error interrupts you would also need to clear
                           // the respective flags
  IPC6bits.U1IP = 1;       // interrupt priority
9d0027d8:	3c02bf88 	lui	v0,0xbf88
9d0027dc:	8c4510f0 	lw	a1,4336(v0)
9d0027e0:	7c652084 	ins	a1,v1,0x2,0x3
9d0027e4:	ac4510f0 	sw	a1,4336(v0)
  IEC0bits.U1RXIE = 1;     // enable the RX interrupt
9d0027e8:	3c02bf88 	lui	v0,0xbf88
9d0027ec:	8c451060 	lw	a1,4192(v0)
9d0027f0:	7c65dec4 	ins	a1,v1,0x1b,0x1
9d0027f4:	ac451060 	sw	a1,4192(v0)

  // turn on UART1
  U1MODEbits.ON = 1;
9d0027f8:	94826000 	lhu	v0,24576(a0)
9d0027fc:	7c627bc4 	ins	v0,v1,0xf,0x1
9d002800:	a4826000 	sh	v0,24576(a0)
9d002804:	03e00008 	jr	ra
9d002808:	00000000 	nop

Disassembly of section .text.main_entry:

9d00280c <_main_entry>:
9d00280c:	3c040000 	lui	a0,0x0
9d002810:	27bdffe8 	addiu	sp,sp,-24
9d002814:	24840000 	addiu	a0,a0,0
9d002818:	10800003 	beqz	a0,9d002828 <_main_entry+0x1c>
9d00281c:	afbf0014 	sw	ra,20(sp)
9d002820:	0080f809 	jalr	a0
9d002824:	00000000 	nop
9d002828:	30840000 	andi	a0,a0,0x0
9d00282c:	30a50000 	andi	a1,a1,0x0
9d002830:	3c089d00 	lui	t0,0x9d00
9d002834:	25082184 	addiu	t0,t0,8580
9d002838:	0100f809 	jalr	t0
9d00283c:	00000000 	nop

9d002840 <__crt0_exit>:
9d002840:	3c020000 24420000 10400003 00000000     ...<..B$..@.....
9d002850:	0040f809 00000000 1000fff9 00000000     ..@.............

Disassembly of section .text._bootstrap_exception_handler:

9d002860 <_bootstrap_exception_handler>:
9d002860:	3c020000 	lui	v0,0x0
9d002864:	24420000 	addiu	v0,v0,0
9d002868:	10400005 	beqz	v0,9d002880 <_bootstrap_exception_handler+0x20>
9d00286c:	3c020000 	lui	v0,0x0
9d002870:	24420000 	addiu	v0,v0,0
9d002874:	10400003 	beqz	v0,9d002884 <_bootstrap_exception_handler+0x24>
9d002878:	3c029d00 	lui	v0,0x9d00
9d00287c:	7000003f 	sdbbp
9d002880:	3c029d00 	lui	v0,0x9d00
9d002884:	24422938 	addiu	v0,v0,10552
9d002888:	10400005 	beqz	v0,9d0028a0 <.LCFI2>
9d00288c:	00000000 	nop
9d002890:	27bdffe8 	addiu	sp,sp,-24

9d002894 <.LCFI0>:
9d002894:	afbf0014 	sw	ra,20(sp)
9d002898:	0040f809 	jalr	v0
9d00289c:	00000000 	nop

9d0028a0 <.LCFI2>:
9d0028a0:	0b400a28 	j	9d0028a0 <.LCFI2>
9d0028a4:	00000000 	nop

Disassembly of section .text._general_exception_handler:

9d0028a8 <_general_exception_handler>:
9d0028a8:	3c020000 	lui	v0,0x0
9d0028ac:	24420000 	addiu	v0,v0,0
9d0028b0:	10400005 	beqz	v0,9d0028c8 <_general_exception_handler+0x20>
9d0028b4:	3c020000 	lui	v0,0x0
9d0028b8:	24420000 	addiu	v0,v0,0
9d0028bc:	10400003 	beqz	v0,9d0028cc <_general_exception_handler+0x24>
9d0028c0:	3c029d00 	lui	v0,0x9d00
9d0028c4:	7000003f 	sdbbp
9d0028c8:	3c029d00 	lui	v0,0x9d00
9d0028cc:	24422938 	addiu	v0,v0,10552
9d0028d0:	10400005 	beqz	v0,9d0028e8 <.LCFI2>
9d0028d4:	00000000 	nop
9d0028d8:	27bdffe8 	addiu	sp,sp,-24

9d0028dc <.LCFI0>:
9d0028dc:	afbf0014 	sw	ra,20(sp)
9d0028e0:	0040f809 	jalr	v0
9d0028e4:	00000000 	nop

9d0028e8 <.LCFI2>:
9d0028e8:	0b400a3a 	j	9d0028e8 <.LCFI2>
9d0028ec:	00000000 	nop

Disassembly of section .vector_default:

9d0028f0 <_DefaultInterrupt>:
9d0028f0:	3c020000 	lui	v0,0x0
9d0028f4:	24420000 	addiu	v0,v0,0
9d0028f8:	10400007 	beqz	v0,9d002918 <_DefaultInterrupt+0x28>
9d0028fc:	3c020000 	lui	v0,0x0
9d002900:	24420000 	addiu	v0,v0,0
9d002904:	50400005 	beqzl	v0,9d00291c <_DefaultInterrupt+0x2c>
9d002908:	3c029d00 	lui	v0,0x9d00
9d00290c:	7000003f 	sdbbp
9d002910:	03e00008 	jr	ra
9d002914:	00000000 	nop
9d002918:	3c029d00 	lui	v0,0x9d00
9d00291c:	24422938 	addiu	v0,v0,10552
9d002920:	10400003 	beqz	v0,9d002930 <_DefaultInterrupt+0x40>
9d002924:	00000000 	nop
9d002928:	0040f809 	jalr	v0
9d00292c:	00000000 	nop
9d002930:	03e00008 	jr	ra
9d002934:	00000000 	nop

Disassembly of section .text:

9d002938 <__pic32_software_reset>:
9d002938:	41606000 	di
9d00293c:	000000c0 	ehb
9d002940:	3c03aa99 	lui	v1,0xaa99
9d002944:	3c02bf81 	lui	v0,0xbf81
9d002948:	24636655 	addiu	v1,v1,26197
9d00294c:	ac40f230 	sw	zero,-3536(v0)
9d002950:	ac43f230 	sw	v1,-3536(v0)
9d002954:	3c035566 	lui	v1,0x5566
9d002958:	346399aa 	ori	v1,v1,0x99aa
9d00295c:	ac43f230 	sw	v1,-3536(v0)
9d002960:	3c02bf81 	lui	v0,0xbf81
9d002964:	24030001 	li	v1,1
9d002968:	ac43f618 	sw	v1,-2536(v0)
9d00296c:	3c02bf81 	lui	v0,0xbf81
9d002970:	8c42f610 	lw	v0,-2544(v0)
9d002974:	0b400a50 	j	9d002940 <__pic32_software_reset+0x8>
9d002978:	00000000 	nop

9d00297c <_nmi_handler>:
9d00297c:	401a6000 	mfc0	k0,c0_status
9d002980:	3c1bffbf 	lui	k1,0xffbf
9d002984:	377bffff 	ori	k1,k1,0xffff
9d002988:	035bd024 	and	k0,k0,k1
9d00298c:	409a6000 	mtc0	k0,c0_status
9d002990:	42000018 	eret

Disassembly of section .dinit:

9d002994 <.dinit>:
9d002994:	00000000 	nop
9d002998:	22222222 	addi	v0,s1,8738
9d00299c:	22222222 	addi	v0,s1,8738
9d0029a0:	22222222 	addi	v0,s1,8738

Disassembly of section .text._on_reset:

9d0029a4 <_on_reset>:
9d0029a4:	03e00008 	jr	ra
9d0029a8:	00000000 	nop

Disassembly of section .text._on_bootstrap:

9d0029ac <_on_bootstrap>:
9d0029ac:	03e00008 	jr	ra
9d0029b0:	00000000 	nop
